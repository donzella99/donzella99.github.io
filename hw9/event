package com.example.hw9.ui.main;

import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.util.Log;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.widget.ImageButton;
import android.widget.TableRow;
import android.widget.TextView;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;
import androidx.appcompat.widget.Toolbar;

import com.example.hw9.R;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;


public class Event<final3> extends AppCompatActivity {
    String events_ticketmaster;
    String artist;
    String venue;
    String date;
    String category;
    String priceRange;
    String ticketStatus;
    String buyTicket;
    String seatMap;
    String city;
    String phoneNumber;
    String openHours;
    String generalRule;
    String childRule;
    String name;
    String address;
    JSONObject new_obj1;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_event);
      //  getSupportActionBar().setDisplayHomeAsUpEnabled(true);

        SharedPreferences sh = getSharedPreferences("MySharedPref", MODE_APPEND);
        String s1 = sh.getString("name", "");
    Log.d("received",s1);

//        SharedPreferences prefs = getSharedPreferences("preferencename", 0);
//        int size = prefs.getInt("GATA" +"_size",0);
//        String array[] = new String[size];
//        for(int i=0;i<size;i++) {
//            array[i] = prefs.getString("Rev" + "_" + i, null);
//            Log.d("RECEIVED", array[i]);
//        }


//
        Toolbar my_toolbar = (Toolbar) findViewById(R.id.eventTool);
        setSupportActionBar(my_toolbar);
//        getSupportActionBar().setIcon(getDrawable(R.drawable.ic_twitter_ic__2_));
        getSupportActionBar().setTitle("Events");
//        getSupportActionBar().setIcon(getDrawable(R.drawable.arrow));

//        my_too
//
//        lbar.setNavigationOnClickListener();




        Intent i = getIntent();
    Log.d("RECEIVED3","go");
        SharedPreferences name =  getSharedPreferences("names", 0);
        int size1 = name.getInt("names" +"_size",0);
        for(int x=0;x<size1;x++) {
            name_fav[x] = name.getString("names" + "_" + x, null);
            Log.d("RECEIVED3", name_fav[x]);
        }
        SharedPreferences date =  getSharedPreferences("dates", 0);
        int size = date.getInt("dates" +"_size",0);
        for(int x=0;x<size;x++) {
            date_fav[x] = date.getString("dates" + "_" + x, null);
            Log.d("RECEIVED4", date_fav[x]);
        }

        events_ticketmaster = i.getStringExtra("please");
        String event = i.getStringExtra("event");
        Log.d("event",event);
        String venue = i.getStringExtra("venue");
       // String date = i.getStringExtra("date");
      //  Log.d("event",events_ticketmaster);
        Log.d("event",event);
        Log.d("venue",venue);
      //  Log.d("date",date);
        if(events_ticketmaster != null) {
            String remove = "tr20";
            int trow_remove = getResources().getIdentifier(remove, "id", getPackageName());
            ((TableRow)findViewById(trow_remove)).setVisibility(View.GONE);
            Log.d("cmon", "bruh");

            String geopoint = "no";

            try {
                update_table(events_ticketmaster);
            } catch (JSONException e) {
                e.printStackTrace();
            }
            Log.d("cmon","after");
            View btn = findViewById(R.id.fav0);
            btn.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    add_fav("0");
                }
            });
            View det = findViewById(R.id.tr0);
            det.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    try {
                        detail(0);
                    } catch (JSONException e) {
                        e.printStackTrace();
                    }
                }
            });

            btn = findViewById(R.id.fav1);
            btn.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    add_fav("1");
                }
            });
            det = findViewById(R.id.tr1);
            det.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    try {
                        detail(1);
                    } catch (JSONException e) {
                        e.printStackTrace();
                    }
                }
            });

            btn = findViewById(R.id.fav2);
            btn.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    add_fav("2");
                }
            });
            det = findViewById(R.id.tr2);
            det.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    try {
                        detail(2);
                    } catch (JSONException e) {
                        e.printStackTrace();
                    }
                }
            });

            btn = findViewById(R.id.fav3);
            btn.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    add_fav("3");
                }
            });
            det = findViewById(R.id.tr3);
            det.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    try {
                        detail(3);
                    } catch (JSONException e) {
                        e.printStackTrace();
                    }
                }
            });

            btn = findViewById(R.id.fav4);
            btn.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    add_fav("4");
                }
            });
            det = findViewById(R.id.tr4);
            det.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    try {
                        detail(4);
                    } catch (JSONException e) {
                        e.printStackTrace();
                    }
                }
            });

            btn = findViewById(R.id.fav5);
            btn.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    add_fav("5");
                }
            });
            det = findViewById(R.id.tr5);
            det.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    try {
                        detail(5);
                    } catch (JSONException e) {
                        e.printStackTrace();
                    }
                }
            });

            btn = findViewById(R.id.fav6);
            btn.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    add_fav("6");
                }
            });
            det = findViewById(R.id.tr6);
            det.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    try {
                        detail(6);
                    } catch (JSONException e) {
                        e.printStackTrace();
                    }
                }
            });

            btn = findViewById(R.id.fav7);
            btn.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    add_fav("7");
                }
            });
            det = findViewById(R.id.tr7);
            det.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    try {
                        detail(7);
                    } catch (JSONException e) {
                        e.printStackTrace();
                    }
                }
            });

            btn = findViewById(R.id.fav8);
            btn.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    add_fav("8");
                }
            });
            det = findViewById(R.id.tr8);
            det.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    try {
                        detail(8);
                    } catch (JSONException e) {
                        e.printStackTrace();
                    }
                }
            });

            btn = findViewById(R.id.fav9);
            btn.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    add_fav("9");
                }
            });
            det = findViewById(R.id.tr9);
            det.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    try {
                        detail(9);
                    } catch (JSONException e) {
                        e.printStackTrace();
                    }
                }
            });

            btn = findViewById(R.id.fav10);
            btn.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    add_fav("10");
                }
            });
            det = findViewById(R.id.tr10);
            det.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    try {
                        detail(10);
                    } catch (JSONException e) {
                        e.printStackTrace();
                    }
                }
            });

            btn = findViewById(R.id.fav11);
            btn.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    add_fav("11");
                }
            });
            det = findViewById(R.id.tr11);
            det.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    try {
                        detail(11);
                    } catch (JSONException e) {
                        e.printStackTrace();
                    }
                }
            });

            btn = findViewById(R.id.fav12);
            btn.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    add_fav("12");
                }
            });
            det = findViewById(R.id.tr12);
            det.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    try {
                        detail(12);
                    } catch (JSONException e) {
                        e.printStackTrace();
                    }
                }
            });

            btn = findViewById(R.id.fav13);
            btn.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    add_fav("13");
                }
            });
            det = findViewById(R.id.tr13);
            det.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    try {
                        detail(13);
                    } catch (JSONException e) {
                        e.printStackTrace();
                    }
                }
            });

            btn = findViewById(R.id.fav14);
            btn.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    add_fav("14");
                }
            });
            det = findViewById(R.id.tr14);
            det.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    try {
                        detail(14);
                    } catch (JSONException e) {
                        e.printStackTrace();
                    }
                }
            });

            btn = findViewById(R.id.fav15);
            btn.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    add_fav("15");
                }
            });
            det = findViewById(R.id.tr15);
            det.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    try {
                        detail(15);
                    } catch (JSONException e) {
                        e.printStackTrace();
                    }
                }
            });

            btn = findViewById(R.id.fav16);
            btn.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    add_fav("16");
                }
            });
            det = findViewById(R.id.tr16);
            det.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    try {
                        detail(16);
                    } catch (JSONException e) {
                        e.printStackTrace();
                    }
                }
            });

            btn = findViewById(R.id.fav17);
            btn.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    add_fav("17");
                }
            });
            det = findViewById(R.id.tr17);
            det.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    try {
                        detail(17);
                    } catch (JSONException e) {
                        e.printStackTrace();
                    }
                }
            });

            btn = findViewById(R.id.fav18);
            btn.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    add_fav("18");
                }
            });
            det = findViewById(R.id.tr18);
            det.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    try {
                        detail(18);
                    } catch (JSONException e) {
                        e.printStackTrace();
                    }
                }
            });

            btn = findViewById(R.id.fav19);
            btn.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    add_fav("19");
                }
            });
            det = findViewById(R.id.tr19);
            det.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    try {
                        detail(19);
                    } catch (JSONException e) {
                        e.printStackTrace();
                    }
                }
            });
        }
        else{
            Log.d("cmon","man");
            for(int x =0; x<20; x++) {
                String row = "tr"+x;
                int trow = getResources().getIdentifier(row, "id", getPackageName());
                ((TableRow)findViewById(trow)).setVisibility(View.GONE);
            }
        }
    }
    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        MenuInflater inflater=getMenuInflater();
        inflater.inflate(R.menu.menu,menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(@NonNull MenuItem item) {
        String msg= " ";
        switch(item.getItemId()){
            case R.id.back:
                goBack();
        }
        return super.onOptionsItemSelected(item);
    }

    public void goBack(){
        Intent x = new Intent(this,MainActivity.class);

//        SharedPreferences name1 = this.getSharedPreferences("names1", 0);
//        SharedPreferences.Editor editor = name1.edit();
//        editor.putInt("Name1" +"_size", names.length);
//        Log.d("send","about");
//        for(int y=0;y<names.length;y++) {
//            editor.putString("Name1" + "_" + y, names[y]);
//            Log.d("send",names[y]);
//        }
//        editor.commit();
        SharedPreferences date1 = this.getSharedPreferences("dates", 0);
        SharedPreferences.Editor editor1 = date1.edit();
        editor1.putInt("Date" +"_size", date_fav.length);
        for(int y=0;y<date_fav.length;y++) {
            editor1.putString("Date" + "_" + y, date_fav[y]);
        }
        editor1.commit();

        SharedPreferences name1 = getSharedPreferences("names", 0);
        SharedPreferences.Editor editor = name1.edit();
        editor.putInt("Name" +"_size", name_fav.length);
        for(int i=0;i<name_fav.length;i++) {
            editor.putString("Name" + "_" + i, name_fav[i]);
        }
        editor.commit();

        Log.d("before",related_obj[0]);
        x.putExtra("venue", "venue");
        startActivity(x);
    }

    public void add_fav(String st) {
        String id_title = "event" + st;
        String fav_img = "fav"+st;
        int fav_id = getResources().getIdentifier(fav_img, "id", getPackageName());
        int text = getResources().getIdentifier(id_title, "id", getPackageName());
        id_title = findViewById(text).toString();
        Log.d("cmonman44","thru");
//
        //Log.d("cmonman23",y);
        String current_name = names[Integer.parseInt(st)];
        String current_obj = obj1[Integer.parseInt(st)];
        Log.d("cmonman23","he");
        Log.d("cmonman23",current_name);
        String current_date = dates[Integer.parseInt(st)];
        int check = 0;
        for(int x =0; x<name_fav.length; x++) {
            int the = search_fav(name_fav, date_fav, current_name, current_date);
            if(the == 0){
                if(name_fav[x].length() == 0 && check == 0) {
                    Log.d("found",current_name);
                    Log.d("found",current_date);
                    name_fav[x] = current_name;
                    date_fav[x] = current_date;
                    related_obj[x] = current_obj;
                    ImageButton button1 = (ImageButton) findViewById(fav_id);
                    button1.setImageResource(R.drawable.heart_fill_red);
                    check=1;
                    Log.d("check","here");
                }
            }
            else if(check == 0 && the!=0){
                Log.d("found","why");
                remove_fav(name_fav, date_fav, current_name,current_date);
                ImageButton button2 = (ImageButton) findViewById(fav_id);
                button2.setImageResource(R.drawable.heart_outline_black);
                check = 1;
            }
//            else{
//                Log.d("cmonman123","already here man");
//            }
        }

    }
    public int search_fav(String[] fav_name, String[] fav_date, String name, String date){ //String[] fav_date, String name, String date){
     //   Log.d("check","not");
        for(int i =0; i<fav_name.length; i++) {
            int x = 0;
            if(name == fav_name[i]){ //date == fav_date[i]) {
                x=1;
                Log.d("check","");
            }
            if(x==1){
                return 1;
            }
        }
        return 0;
    }

    public void remove_fav(String[] fav_name, String[] fav_date, String name, String date){
        for(int i =0; i<fav_name.length; i++) {
            if (fav_name[i] == name && fav_date[i] == date) {
                fav_name[i] = "";
                fav_date[i] = "";
            }
        }
    }
       //((TextView)findViewById(R.id.event1)).setText(event + '\n' + venue + '\n' + date);
    public void update_table(String obj) throws JSONException {

        String name = "";
        String date = "";
        String category_temp ="f";
        String category = "Sports";
        new_obj1 = new JSONObject(obj);
        JSONArray new_obj12 = new_obj1.getJSONArray("events");
        int tot = new_obj12.length();
        if(tot>20){
            tot = 20;
        }
        else if(tot<20){
            for(int x =tot-1; x<20; x++) {
                String row = "tr"+x;
                int trow = getResources().getIdentifier(row, "id", getPackageName());
                ((TableRow)findViewById(trow)).setVisibility(View.GONE);
            }
        }

        for(int i=0;i<tot;i++){
            String id_title = "event" + (i);
            String img = "img"+(i);
            String row = "tr"+(i);
            String fav_img1 = "fav"+i;

            int fav_id1 = getResources().getIdentifier(fav_img1, "id", getPackageName());

        for(int z =0; z<name_fav.length; z++){

        }
            Log.d("How",name_fav[i]);
            Log.d("How",date_fav[i]);
            if(search_fav(name_fav, date_fav, name_fav[i], date_fav[i]) == 1){
                ImageButton button1 = (ImageButton) findViewById(fav_id1);
                button1.setImageResource(R.drawable.heart_fill_red);
            }


            try {

                JSONObject new_obj = new_obj1.getJSONArray("events").getJSONObject(i);
                JSONObject new_obj3 = new_obj1.getJSONArray("events").getJSONObject(i).getJSONObject("dates").getJSONObject("start");


                String new_obj_str = new_obj1.getJSONArray("events").getString(i);
                obj1[i] = new_obj_str;

                name = new_obj.getString("name");
                date = new_obj3.getString("localDate");

                names[i] = name;
                Log.d("ha123",name);
                dates[i] = date;

                Log.d("checkname",name);
                Log.d("checkname", "passed");
                category_temp = new_obj.getJSONArray("classifications").getJSONObject(0).getJSONObject("segment").getString("name");
                Log.d("cmonman", category_temp);
            } catch (JSONException e) {
                Log.d("cmonman",e.toString());
            }

            // Log.d("cmonman",id_title);
           // TextView button = (TextView) findViewById(resourceId);
            int text = getResources().getIdentifier(id_title, "id", getPackageName());
            int cat = getResources().getIdentifier(img, "id", getPackageName());
            int trow = getResources().getIdentifier(row, "id", getPackageName());
            ((TableRow)findViewById(R.id.tr1)).setVisibility(View.GONE);

            if(((TextView)findViewById(text)) != null){
                ((TextView)findViewById(text)).setText(name);
                ImageButton btn = (ImageButton)findViewById(cat);
                //Log.d("cmon22",category_temp.trim());
                if("Sports".equals(category_temp)) {
                    btn.setImageResource(R.drawable.ic_sport_icon);
                }
                else if("Music".equals(category_temp)){
                    btn.setImageResource(R.drawable.music_icon);
                }
                else{
                    btn.setImageResource(R.drawable.film_icon);
                }
            }
            else{
                Log.d("cmonman","cmonman");
            }
        }

    }

    public void detail(int x) throws JSONException {
        JSONObject new_obj = new_obj1.getJSONArray("events").getJSONObject(x);

        name = new_obj.getString("name");
        artist = new_obj.getJSONObject("_embedded").getJSONArray("attractions").getJSONObject(0).getString("name");
        venue = new_obj.getJSONObject("_embedded").getJSONArray("venues").getJSONObject(0).getString("name");
        date = new_obj.getJSONObject("dates").getJSONObject("start").getString("localDate");
        String min = new_obj.getJSONArray("priceRanges").getJSONObject(0).getString("min");
        String max= new_obj.getJSONArray("priceRanges").getJSONObject(0).getString("min");
        String type = new_obj.getJSONArray("priceRanges").getJSONObject(0).getString("currency");
        priceRange = min + "-" + max + " " + type;
        ticketStatus = new_obj.getJSONObject("dates").getJSONObject("status").getString("code");
        buyTicket = new_obj.getJSONArray("products").getJSONObject(0).getString("url");
        seatMap = new_obj.getJSONObject("seatmap").getString("staticUrl");
        address = new_obj.getJSONObject("_embedded").getJSONArray("venues").getJSONObject(0).getJSONObject("address").getString("line1");
        city = new_obj.getJSONObject("_embedded").getJSONArray("venues").getJSONObject(0).getJSONObject("city").getString("name");
        phoneNumber = new_obj.getJSONObject("_embedded").getJSONArray("venues").getJSONObject(0).getJSONObject("boxOfficeInfo").getString("phoneNumberDetail");
        openHours = new_obj.getJSONObject("_embedded").getJSONArray("venues").getJSONObject(0).getJSONObject("boxOfficeInfo").getString("openHoursDetail");
        generalRule =  new_obj.getJSONObject("_embedded").getJSONArray("venues").getJSONObject(0).getJSONObject("generalInfo").getString("generalRule");
        childRule =  new_obj.getJSONObject("_embedded").getJSONArray("venues").getJSONObject(0).getJSONObject("generalInfo").getString("childRule");

        Log.d("stuff",artist);

        detail1_fragment detail1 = new detail1_fragment();

//        FragmentTransaction fragmentTransaction = getSupportFragmentManager().beginTransaction();
//        Bundle data = new Bundle();
//        data.putString("data", "Hello");
//        detail1.setArguments(data);
//        fragmentTransaction.replace(R.id.f1Fragment, detail1).commit();

        Intent i = new Intent(this,Detail.class);
//        Bundle b = new Bundle();
//        b.putStringArray("key",name_fav);
//        i.putExtras(b);
          i.putExtra("name",name);
          i.putExtra("artist", artist);
          i.putExtra("venue", venue);
          i.putExtra("date", date);
          i.putExtra("category", category);
          i.putExtra("priceRange", priceRange);
          i.putExtra("ticketStatus", ticketStatus);
          i.putExtra("buyTicket", buyTicket);
          i.putExtra("seatMap", seatMap);
          i.putExtra("city", "city");
          i.putExtra("phoneNumber", "phoneNumber");
          i.putExtra("openHours", "openHours");
          i.putExtra("generalRule", "generalRule");
          i.putExtra("childRule", "childRule");

        startActivity(i);
    }

    public void change_fav(View v, int i){
        ImageButton btn = (ImageButton)findViewById(i);
        btn.setImageResource(R.drawable.heart_fill_red);


    }


    String[] name_fav = new String[]{"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""};
    String[] date_fav = new String[]{"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""};
    String[] related_obj = new String[]{"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""};
    String[] names = new String[]{"","","","","","","","","","","","","","","","","","","",""};
    String[] dates = new String[]{"","","","","","","","","","","","","","","","","","","",""};
    String[] obj1 =  new String[]{"","","","","","","","","","","","","","","","","","","",""};
}










/*

// String url = "https://hw8-csci571-316703.wl.r.appspot.com/search?Keyword=LAFC&geoPoint=34.0522%2C-118.2437&Category=&Radius=10";
        String url = "https://app.ticketmaster.com/discovery/v2/events.json?apikey=qcOhKgPQynndjc1pcDNq0flHYCg2ltMF";
        Log.d("info","confirm");
        RequestQueue requestQueue = Volley.newRequestQueue(this);
        JsonObjectRequest
                jsonObjectRequest
                = new JsonObjectRequest(Request.Method.GET,url,null,
                new Response.Listener<JSONObject>() {
                    @Override
                    public void onResponse(JSONObject response) {
                        Log.d("info","actually-works");
                        try {
                            JSONObject res = response.getJSONObject("_embedded");
                            JSONArray final1 = res.getJSONArray("events");
                            final_obj = final1;
                            String final2 = final1.getString(0);

                            //    Toast.makeText(MainActivity.this, "Test: " + final2, Toast.LENGTH_SHORT).show();
                        } catch (JSONException e) {
                            e.printStackTrace();
                            Log.d("info","no-works");
                        }
                    }
                },
                new Response.ErrorListener() {
                    @Override
                    public void onErrorResponse(VolleyError error)
                    {
                        //Toast.makeText(MainActivity.this, "Check2", Toast.LENGTH_SHORT).show();
                        Log.d("info","not-works");
                    }
                });
        requestQueue.add(jsonObjectRequest);
        try{
            String event_number = final_obj.getString(0);
            Log.d("not",event_number);
        }
        catch (JSONException e){
            Log.d("info","not working :(");
        }


 */
